-- Database: maintenanceDB

DROP TABLE IF EXISTS UTENTE CASCADE;
DROP TABLE IF EXISTS LOGGING;
DROP TABLE IF EXISTS MAINTAINER;
DROP TABLE IF EXISTS PLANNER;
DROP TABLE IF EXISTS SYSADMIN;
DROP TABLE IF EXISTS COMPETENZA CASCADE;
DROP TABLE IF EXISTS MATERIALE;
DROP TABLE IF EXISTS SITO CASCADE;
DROP TABLE IF EXISTS TIPOLOGIA CASCADE;
DROP TABLE IF EXISTS PROCEDURA CASCADE;
DROP TABLE IF EXISTS NOTA;
DROP TABLE IF EXISTS ATTIVITA_MANUTENZIONE;

CREATE TABLE UTENTE(
 nome VARCHAR(15) NOT NULL,
 cognome VARCHAR(15) NOT NULL,
 username VARCHAR(10) NOT NULL,
 pass VARCHAR(16) NOT NULL,
 CONSTRAINT PK_USERNAME PRIMARY KEY(username)
);

CREATE TABLE LOGGING(
 id SERIAL,
 username VARCHAR(10) NOT NULL, 
 log_time TIMESTAMP DEFAULT now() not null,
 CONSTRAINT FK_UTENTE FOREIGN KEY (username) references UTENTE (username),
 CONSTRAINT PK_ID PRIMARY KEY(id)
);

CREATE TABLE MAINTAINER(
	username VARCHAR(10) NOT NULL,
	CONSTRAINT PK_MAINTAINER PRIMARY KEY (username),
	CONSTRAINT FK_UTENTE_MAINTAINER FOREIGN KEY (username) references UTENTE (username) 
);

CREATE TABLE PLANNER(
	username VARCHAR(10) NOT NULL,
	CONSTRAINT PK_PLANNER PRIMARY KEY (username),
	CONSTRAINT FK_UTENTE_PLANNER FOREIGN KEY (username) references UTENTE (username) ON DELETE CASCADE
);

CREATE TABLE SYSADMIN(
	username VARCHAR(10) NOT NULL,
	CONSTRAINT PK_SYSADMIN PRIMARY KEY (username),
	CONSTRAINT FK_UTENTE_SYSADMIN FOREIGN KEY (username) references UTENTE (username) ON DELETE CASCADE
);


CREATE TABLE COMPETENZA(
	id SERIAL,
	nome VARCHAR(20) UNIQUE NOT NULL,  
	CONSTRAINT PK_COMPETENZA PRIMARY KEY(id)
);

CREATE TABLE PROCEDURA(
	id SERIAL,
	SMP VARCHAR(50) UNIQUE NOT NULL, /* ??? */
	competenza VARCHAR(15), /* Nello schema non ci sta, ma va aggiunta per la relazione */
	CONSTRAINT PK_PROCEDURA PRIMARY KEY(id),
	CONSTRAINT FK_PROCEDURA_COMPETENZA FOREIGN KEY (competenza) REFERENCES COMPETENZA (nome)
);

CREATE TABLE ATTIVITA_MANUTENZIONE(
	activity_id SERIAL,
	descrizione VARCHAR(255),
	intervento_stimato DATE DEFAULT now(),								   
	interrompibile BOOLEAN,
	EWO BOOLEAN,    /*EWO intende se Ã¨ ewo oppure no?*/
	settimana integer,
	procedura VARCHAR(50), 
	sito VARCHAR(15) NOT NULL,
	tipologia VARCHAR(15) NOT NULL,
	CONSTRAINT PK_AM PRIMARY KEY(activity_id),
	CONSTRAINT FK_AM_SITO FOREIGN KEY (sito) REFERENCES SITO (nome),
	CONSTRAINT FK_AM_procedura FOREIGN KEY (procedura) REFERENCES PROCEDURA (procedura)
	/* Da continuare.... */
CREATE TABLE MATERIALE(
	id SERIAL NOT NULL,
	nome VARCHAR(15) NOT NULL,
	descrizione VARCHAR(25),
	attivita integer,
	CONSTRAINT PK_MATERIALE PRIMARY KEY(id),
	constraint FK_MATERIALE FOREIGN KEY (ATTIVITA_MANUTENZIONE) refernces ATTIVITA_MANUTENZIONE(activity_id)
);

CREATE TABLE TIPOLOGIA(
	id SERIAL NOT NULL, 
	nome VARCHAR(15) NOT NULL,
	attivita integer,
	CONSTRAINT PK_TIPOLOGIA PRIMARY KEY(id),
	constraint FK_MATERIALE FOREIGN KEY (ATTIVITA_MANUTENZIONE) refernces ATTIVITA_MANUTENZIONE(activity_id)
);

CREATE TABLE SITO(
	id SERIAL NOT NULL,
	nome VARCHAR(15) UNIQUE NOT NULL,
	attivita integer,
	CONSTRAINT PK_SITO PRIMARY KEY(id),
	constraint FK_MATERIALE FOREIGN KEY (ATTIVITA_MANUTENZIONE) refernces ATTIVITA_MANUTENZIONE(activity_id)
);

CREATE TABLE NOTA(
	id SERIAL NOT NULL,
	TESTO VARCHAR(255) NOT NULL,
	attivita integer,
	CONSTRAINT PK_NOTA PRIMARY KEY(id),
	constraint FK_MATERIALE FOREIGN KEY (ATTIVITA_MANUTENZIONE) refernces ATTIVITA_MANUTENZIONE(activity_id)
);		   
);
