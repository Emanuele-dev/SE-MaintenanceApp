-- Database: maintenanceDB
DROP TABLE IF EXISTS UTENTE CASCADE;
DROP TABLE IF EXISTS LOGGING;
DROP TABLE IF EXISTS MAINTAINER CASCADE;
DROP TABLE IF EXISTS PLANNER;
DROP TABLE IF EXISTS SYSADMIN;
DROP TABLE IF EXISTS COMPETENZA CASCADE;
DROP TABLE IF EXISTS MATERIALE CASCADE;
DROP TABLE IF EXISTS SITO CASCADE;
DROP TABLE IF EXISTS TIPOLOGIA CASCADE;
DROP TABLE IF EXISTS PROCEDURA CASCADE;
DROP TABLE IF EXISTS ATTIVITA_MANUTENZIONE CASCADE;
DROP TABLE IF EXISTS UTILIZZO CASCADE;
DROP TABLE IF EXISTS ESECUZIONE CASCADE;
DROP TABLE IF EXISTS QUALIFICAZIONE CASCADE;
DROP TABLE IF EXISTS ASSEGNAZIONE CASCADE;


CREATE TABLE UTENTE(
	nome VARCHAR(15) NOT NULL,
	cognome VARCHAR(15) NOT NULL,
	username VARCHAR(25) NOT NULL,
	pass VARCHAR(25) NOT NULL,
	attivo BOOLEAN DEFAULT TRUE,
	ruolo VARCHAR(19) NOT NULL,
	CONSTRAINT PK_USERNAME PRIMARY KEY(username),
	CONSTRAINT check_ruolo_limite CHECK(ruolo = 'SystemAdministrator' or ruolo = 'Maintainer' or ruolo = 'Planner')
);

CREATE TABLE LOGGING(
	id SERIAL,
 	username VARCHAR(25) NOT NULL, 
 	log_time TIMESTAMP DEFAULT now() not null,
 	CONSTRAINT PK_ID PRIMARY KEY(id),
 	CONSTRAINT FK_UTENTE FOREIGN KEY (username) references UTENTE (username)
	ON DELETE RESTRICT
	ON UPDATE CASCADE 
);


CREATE TABLE COMPETENZA(
	id SERIAL,
	nome VARCHAR(50) UNIQUE NOT NULL,  
	CONSTRAINT PK_COMPETENZA PRIMARY KEY(id)
);

CREATE TABLE QUALIFICAZIONE(
	maintainer VARCHAR(25),
	competenza VARCHAR(50),
	CONSTRAINT PK_QUALIFICAZIONE PRIMARY KEY(maintainer, competenza),
	CONSTRAINT FK_QUALIFICAZIONE_UTENTE FOREIGN KEY (maintainer) REFERENCES UTENTE (username)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT FK_QUALIFICAZIONE_COMPETENZA FOREIGN KEY(competenza) REFERENCES COMPETENZA(nome)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

CREATE TABLE PROCEDURA(
	id SERIAL,
	nome VARCHAR(75) UNIQUE NOT NULL,
	SMP VARCHAR(50) NOT NULL,
	CONSTRAINT PK_PROCEDURA PRIMARY KEY(id)
);

CREATE TABLE ASSEGNAZIONE(
	id_procedura INTEGER,
	competenza VARCHAR(50),
	CONSTRAINT PK_ASSEGNAZIONE PRIMARY KEY(id_procedura, competenza),
	CONSTRAINT FK_ASSEGNAZIONE_PROCEDURA FOREIGN KEY (id_procedura) REFERENCES PROCEDURA (id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT FK_ASSEGNAZIONE_COMPETENZA FOREIGN KEY(competenza) REFERENCES COMPETENZA(nome)
	ON DELETE CASCADE
	ON UPDATE CASCADE
	
);

CREATE TABLE MATERIALE(
	nome VARCHAR(30) ,
	descrizione VARCHAR(255),
	CONSTRAINT PK_MATERIALE PRIMARY KEY(nome)
);

CREATE TABLE TIPOLOGIA(
	nome VARCHAR(30) NOT NULL,
	CONSTRAINT PK_TIPOLOGIA PRIMARY KEY(nome)
);

CREATE TABLE SITO(
	nome VARCHAR(30),
	CONSTRAINT PK_SITO PRIMARY KEY(nome)
);


CREATE TABLE ATTIVITA_MANUTENZIONE(
	activity_id SERIAL,
	nome VARCHAR(50),
	descrizione VARCHAR(255),							   
	interrompibile BOOLEAN,
	intervento_stimato INTEGER NOT NULL,	
	EWO BOOLEAN DEFAULT FALSE, 
	settimana integer NOT NULL,
	procedura VARCHAR(50) NOT NULL, 
	sito VARCHAR(30) NOT NULL,
	tipologia VARCHAR(15) NOT NULL,
	completa BOOLEAN DEFAULT FALSE,
	nota VARCHAR(1024),
	
	CONSTRAINT PK_AM PRIMARY KEY(activity_id),
	CONSTRAINT FK_AM_SITO FOREIGN KEY (sito) REFERENCES SITO (nome)
	ON DELETE RESTRICT
	ON UPDATE RESTRICT,
	CONSTRAINT FK_AM_procedura FOREIGN KEY (procedura) REFERENCES PROCEDURA (nome)
	ON DELETE RESTRICT
	ON UPDATE CASCADE,
	CONSTRAINT FK_AM_tipologia FOREIGN KEY (tipologia) REFERENCES TIPOLOGIA (nome)
	ON DELETE RESTRICT
	ON UPDATE CASCADE,
	CONSTRAINT check_week CHECK(settimana > 0 and settimana <= 52 )
);

CREATE TABLE UTILIZZO(
	activity_id INTEGER,
	materiale VARCHAR(15),
	CONSTRAINT PK_UTILIZZO PRIMARY KEY(activity_id, materiale),
	CONSTRAINT FK_UTILIZZO_AM FOREIGN KEY(activity_id) REFERENCES ATTIVITA_MANUTENZIONE(activity_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT FK_UTILIZZO_MATERIALE FOREIGN KEY(materiale) REFERENCES MATERIALE(nome)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);

CREATE TABLE ESECUZIONE(
	maintainer VARCHAR(25),
	activity_id INTEGER,
	data_pianificata TIMESTAMP,
	CONSTRAINT PK_ESECUZIONE PRIMARY KEY(activity_id, maintainer),
	CONSTRAINT FK_ESECUZIONE_AM FOREIGN KEY(activity_id) REFERENCES ATTIVITA_MANUTENZIONE(activity_id)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
	CONSTRAINT FK_ESECUZIONE_MAINTAINER FOREIGN KEY(maintainer) REFERENCES UTENTE(username)
	ON DELETE CASCADE
	ON UPDATE CASCADE
);



CREATE OR REPLACE FUNCTION check_ruolo() RETURNS TRIGGER AS 
$BODY$
BEGIN
	IF ((SELECT ruolo FROM UTENTE WHERE UTENTE.username = new.maintainer) != 'Maintainer') THEN
		RAISE EXCEPTION 'Utente deve essere maintainer';
	END IF;
	RETURN new;
END
$BODY$ LANGUAGE plpgsql;

CREATE TRIGGER check_ruolo_esecuzione
	BEFORE INSERT OR UPDATE ON ESECUZIONE
	FOR EACH ROW
	EXECUTE PROCEDURE check_ruolo();

CREATE TRIGGER check_ruolo_qualifica
	BEFORE INSERT OR UPDATE ON QUALIFICAZIONE
	FOR EACH ROW
	EXECUTE PROCEDURE check_ruolo();


